{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/current-weather/current-weather.component.ts","webpack:///src/app/components/current-weather/current-weather.component.html","webpack:///src/app/components/rain-effect/rain-effect.component.ts","webpack:///src/app/components/rain-effect/rain-effect.component.html","webpack:///src/app/components/sun/sun.component.ts","webpack:///src/app/components/sun/sun.component.html","webpack:///src/app/components/wind-turbine/wind-turbine.component.ts","webpack:///src/app/components/wind-turbine/wind-turbine.component.html","webpack:///src/app/config/config.ts","webpack:///src/app/pages/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.html","webpack:///src/app/pipes/img.pipe.ts","webpack:///src/app/services/city.service.ts","webpack:///src/app/services/weather.service.ts","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","declarations","providers","bootstrap","CurrentWeatherComponent","cityService","weatherService","evaluateTime","getDate","getCities","subscribe","citiesList","getCurrentWearther","getForecasHourlytWeather","dataHourly","forecastHourly","getForecasDailytWeather","dataDaily","forecastDaily","setInterval","currentTime","Date","metric","city","getCurrentWeather","data","currentWeather","getHours","emit","changeCity","RainEffectComponent","cssClass","SunComponent","WindTurbineComponent","URL_SERVICES","API_KEY","DashboardComponent","ImgPipe","img","url","name","CityService","http","get","pipe","filter","country","providedIn","WeatherService","units","forecatsHourly","list","hourly","dt_txt","indexOf","getCurrentDate","date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","HeaderComponent","cityServices","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\n\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'wichWeather';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule, HashLocationStrategy, LocationStrategy} from '@angular/common';\n\n// Routing\nimport { AppRoutingModule } from './app-routing.module';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { CurrentWeatherComponent } from './components/current-weather/current-weather.component';\nimport { WindTurbineComponent } from './components/wind-turbine/wind-turbine.component';\nimport { RainEffectComponent } from './components/rain-effect/rain-effect.component';\nimport { SunComponent } from './components/sun/sun.component';\n\n// Pipes\nimport { ImgPipe } from './pipes/img.pipe';\n\n// Packages\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgCircleProgressModule } from 'ng-circle-progress';\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeaderComponent,\n    CurrentWeatherComponent,\n    WindTurbineComponent,\n    ImgPipe,\n    RainEffectComponent,\n    SunComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgSelectModule,\n    CommonModule,\n    NgCircleProgressModule.forRoot()\n  ],\n  providers: [\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { WeatherService } from 'src/app/services/weather.service';\nimport { CityService } from 'src/app/services/city.service';\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.scss'],\n})\nexport class CurrentWeatherComponent implements OnInit {\n  @Output() evaluateTime: EventEmitter<boolean> = new EventEmitter();\n  currentTime: Date;\n  citiesList;\n  currentWeather;\n  forecastHourly;\n  forecastDaily;\n  constructor(\n    private cityService: CityService,\n    private weatherService: WeatherService\n  ) {}\n\n  ngOnInit(): void {\n    this.getDate();\n\n    this.cityService\n    .getCities()\n    .subscribe(() => (this.citiesList = this.cityService.citiesList));\n\n    this.getCurrentWearther();\n\n    this.weatherService\n    .getForecasHourlytWeather()\n    .subscribe(dataHourly => ( this.forecastHourly = dataHourly) );\n\n    this.weatherService\n    .getForecasDailytWeather()\n    .subscribe( dataDaily => this.forecastDaily = dataDaily );\n  }\n\n  getDate() {\n    setInterval(() => {\n      this.currentTime = new Date();\n    }, 1000);\n  }\n\n  getCurrentWearther(metric?, city?) {\n    this.weatherService.getCurrentWeather(metric, city).subscribe(data => this.currentWeather = data);\n  }\n\n  changeCity(e) {\n    this.getCurrentWearther('metric', e.id);\n  }\n\n  isNight() {\n    if (this.currentTime.getHours() <= 17) {\n      this.evaluateTime.emit(false);\n      return false;\n    } else {\n      this.evaluateTime.emit(true);\n      return true;\n    }\n  }\n\n}\n","<div class=\"container contenedor\">\n  <div class=\"container-lgx\">\n    <div class=\"h-100 d-flex flex-column position-relative\">\n      <ng-container *ngIf=\"currentTime\">\n        <app-sun *ngIf=\"!isNight()\"></app-sun>\n      </ng-container>\n\n      <ng-container *ngIf=\"currentWeather\">\n        <app-rain-effect *ngIf=\"currentWeather.weather[0].main === 'Rain'\"></app-rain-effect>\n      </ng-container>\n\n      <div class=\"pt-3\">\n        <ng-select [items]=\"citiesList\" placeholder=\"Buscar \" bindLabel=\"name\" bindValue=\"id\" (change)=\"changeCity($event)\"></ng-select>\n        <div class=\"d-flex py-5 justify-content-between content-header\">\n          <div class=\"font-lg\" *ngIf=\"currentWeather\">{{currentWeather.name}}</div>\n        </div>\n      </div>\n      <div *ngIf=\"currentWeather\" class=\"d-flex flex-column flex-grow-1 justify-content-center align-content-stretch\">\n        <div class=\"text-center\">\n          {{currentWeather.weather[0].description | titlecase}}\n        </div>\n        <div class=\"text-center font-xl\">\n          {{currentWeather.main.temp | number: '1.0-0'}}°\n        </div>\n        <div class=\"text-center\">\n          feels like {{currentWeather.main.feels_like | number: '1.0-0'}}°\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container-mdx\">\n      <div class=\"box\">\n        <div class=\"box-title\">\n          <span>Humedad</span>\n        </div>\n        <div class=\"box-body\">\n          <ng-container class=\"flex-grow-1\" *ngIf=\"currentWeather\">\n            <circle-progress [percent]=\"currentWeather.main.humidity\" [radius]=\"100\" [outerStrokeWidth]=\"16\"\n              [innerStrokeWidth]=\"8\" [outerStrokeColor]=\"'#78C000'\" [innerStrokeColor]=\"'#C7E596'\" [animation]=\"true\"\n              [animationDuration]=\"300\">\n            </circle-progress>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-title pt-5\" *ngIf=\"currentWeather\">\n          <span>Viento</span>\n          <div>\n            <span>{{currentWeather.wind.speed}} m/s</span>\n          </div>\n        </div>\n        <div class=\"box-body\">\n          <ng-container *ngIf=\"currentWeather\">\n            <app-wind-turbine></app-wind-turbine>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"box box-overflow\">\n        <div class=\"d-flex box-overflow\" *ngIf=\"forecastHourly\" style=\"height: fit-content;\">\n          <div class=\"d-flex flex-column align-items-center m-3\" style=\"width: 100px;\" *ngFor=\"let itemHourly of forecastHourly\">\n              <span>{{itemHourly.dt_txt.substr(11,5)}}</span>\n              <img [src]=\"itemHourly.weather[0].icon | img\" alt=\"\" width=\"50px\">\n              <span>{{itemHourly.main.temp | number: '1.0-0'}}</span>\n          </div>\n        </div>\n        <div class=\"box-overflow-y\">\n          <div class=\"d-flex align-items-center mx-3 justify-content-between\" *ngFor=\"let itemDaily of forecastDaily\"\n          style=\"border-top: .5px solid #487ec1\">\n            <span>{{itemDaily.dt_txt.substr(0,10)}}</span>\n            <img [src]=\"itemDaily.weather[0].icon | img\" alt=\"\" width=\"50px\">\n            <span>{{itemDaily.main.temp | number: '1.0-0'}}°</span>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'app-rain-effect',\n  templateUrl: './rain-effect.component.html',\n  styleUrls: ['./rain-effect.component.scss']\n})\nexport class RainEffectComponent implements OnInit {\n  @HostBinding('attr.class') cssClass = 'total-heigth';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i\n  class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i><i class=\"rain\"></i>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sun',\n  templateUrl: './sun.component.html',\n  styleUrls: ['./sun.component.scss']\n})\nexport class SunComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"sun\">\n  <div class=\"ray_box\">\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wind-turbine',\n  templateUrl: './wind-turbine.component.html',\n  styleUrls: ['./wind-turbine.component.scss']\n})\nexport class WindTurbineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"turbine\">\n  <div class=\"pilot\">\n    <div class=\"prop-container\">\n      <div class=\"prop\"></div>\n      <div class=\"prop\"></div>\n      <div class=\"prop\"></div>\n    </div>\n  </div>\n  <!-- <div class=\"pole\"></div> -->\n</div>\n","export const URL_SERVICES = 'https:api.openweathermap.org/data/2.5';\nexport const API_KEY = 'bffcf4dc1d5f2e25958d9149c635fb74';\n","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from 'src/app/services/weather.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  cityId: string;\n  isNight: boolean;\n  constructor(private weatherService: WeatherService) {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"background-day main-container\" [ngClass]=\"isNight?'background-night':'background-day'\">\n  <app-header></app-header>\n  <main>\n    <app-current-weather (evaluateTime)=\"isNight = $event\"></app-current-weather>\n  </main>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'img',\n})\nexport class ImgPipe implements PipeTransform {\n  transform(img: string): string {\n    const url = `http://openweathermap.org/img/wn/${img}@2x.png`;\n    return url;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CityService {\n  citiesList;\n  constructor(private http: HttpClient) {}\n\n  getCities() {\n    return this.http\n      .get('../../assets/data/city.list.min.json')\n      .pipe(switchMap((data: any) => {\n        this.citiesList = data.filter(city => {\n          if (city.country === 'PE') { return true; }\n          return false;\n        });\n        return this.citiesList;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { URL_SERVICES, API_KEY } from '../config/config';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService {\n  forecatsHourly;\n  constructor(private http: HttpClient) {}\n\n  getCurrentWeather(units: string = 'metric', city: string = '3936452') {\n    const url = `${URL_SERVICES}/weather?id=${city}&units=${units}&lang=es&appid=${API_KEY}`;\n    return this.http.get(url);\n  }\n\n  getForecasHourlytWeather(units: string = 'metric', city: string = '3936452') {\n    const url = `${URL_SERVICES}/forecast?id=${city}&units=${units}&appid=${API_KEY}`;\n    return this.http.get(url).pipe(\n      map((data: any) => {\n        this.forecatsHourly = data.list.filter(\n          (hourly) => hourly.dt_txt.indexOf(this.getCurrentDate()) >= 0\n        );\n        return this.forecatsHourly;\n      })\n    );\n  }\n\n  getForecasDailytWeather(units: string = 'metric', city: string = '3936452') {\n    const url = `${URL_SERVICES}/forecast?id=${city}&units=${units}&appid=${API_KEY}`;\n    return this.http.get(url).pipe(\n      map((data: any) => {\n        this.forecatsHourly = data.list.filter(\n          (hourly) => hourly.dt_txt.indexOf(this.getCurrentDate()) < 0\n        );\n        this.forecatsHourly = data.list.filter(\n          (hourly) => hourly.dt_txt.indexOf('12:00:00') >= 0\n        );\n        return this.forecatsHourly;\n      })\n    );\n  }\n\n  getCurrentDate(): string {\n    const date = new Date();\n    const dd = String(date.getDate()).padStart(2, '0');\n    const mm = String(date.getMonth() + 1).padStart(2, '0');\n    const yyyy = date.getFullYear();\n    return `${yyyy}-${mm}-${dd}`;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CityService } from 'src/app/services/city.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  data: any[];\n  constructor(\n    private cityServices: CityService\n  ) {}\n\n  ngOnInit() {}\n}\n","<header class=\"app-header\">\n  <h1>What The Weather</h1>\n</header>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}